version: '3'

services:
  node-app:
    build: .
    image: node-app
    container_name: node-app-dev
    ports:
      - '${PORT}:${PORT}'
    environment:
      - NODE_CONFIG={"host":"${HOST}","port":${PORT},"authentication":{"oauth":{"github":{"redirect_uri":"http://${HOST}:${PORT}/oauth/github/callback","key":"${GITHUB_KEY}","secret":"${GITHUB_SECRET}"}}},"postgresql":{"client":"pg","connection":"postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"}}
    depends_on:
      - database-layer
    volumes:
      - .:/usr/src/node-app
    networks:
      - shared-network
    restart: on-failure

  database-layer:
    image: postgres:12-alpine
    container_name: database-layer
    environment:
        - DB_POSTGRES=true
        - PGPORT=${DB_PORT}
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASSWORD}
        - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - shared-network
    volumes:
      - database-volume:/var/lib/postgresql/data
    restart: on-failure

  admin:
    image: adminer
    restart: on-failure
    depends_on:
      - database-layer
    ports:
      - 8080:8080
    networks:
      - shared-network
#   Link:
#   http://0.0.0.0:8080/?pgsql=database-layer%3A2665&username=dbuser&db=dbname&ns=public

volumes:
  database-volume:

networks:
  shared-network:
